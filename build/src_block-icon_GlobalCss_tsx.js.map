{"version":3,"file":"src_block-icon_GlobalCss_tsx.js","mappings":"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","sources":["webpack://woostifyblocks/./src/block-icon/GlobalCss.tsx","webpack://woostifyblocks/./src/components/controls/MyBoxShadowControl/getBoxShadowStyles.ts","webpack://woostifyblocks/./src/utils/getBackgroundColorGradientStyles.ts","webpack://woostifyblocks/./src/utils/getBoxShadowStyles.ts"],"sourcesContent":["import { Global, CSSObject } from \"@emotion/react\";\r\nimport React, { FC, CSSProperties } from \"react\";\r\nimport getBorderStyles from \"../utils/getBorderStyles\";\r\nimport getBoxShadowStyles from \"../utils/getBoxShadowStyles\";\r\nimport getBackgroundColorGradientStyles from \"../utils/getBackgroundColorGradientStyles\";\r\nimport { getAdvanveDivWrapStyles } from \"../block-container/getAdvanveStyles\";\r\nimport { HasResponsive } from \"../components/controls/MyBackgroundControl/types\";\r\nimport getFlexPropertiesStyles from \"../utils/getFlexPropertiesStyles\";\r\nimport getStyleObjectFromResponsiveAttr from \"../utils/getStyleObjectFromResponsiveAttr\";\r\nimport getPaddingMarginStyles from \"../utils/getPaddingMarginStyles\";\r\nimport getValueFromAttrsResponsives from \"../utils/getValueFromAttrsResponsives\";\r\nimport { DEMO_WCB_GLOBAL_VARIABLES } from \"../________\";\r\nimport { WcbAttrsForSave } from \"./Save\";\r\nimport checkResponsiveValueForOptimizeCSS from \"../utils/checkResponsiveValueForOptimizeCSS\";\r\n\r\ninterface Props extends WcbAttrsForSave { }\r\n\r\nconst GlobalCss: FC<Props> = (attrs) => {\r\n\tconst {\r\n\t\tuniqueId,\r\n\t\t// ATTRS OF BLOCK\r\n\t\tgeneral_icon,\r\n\t\tstyle_background,\r\n\t\tstyle_icon,\r\n\t\tstyle_border,\r\n\t\tstyle_boxshadow,\r\n\t\tstyle_dimension,\r\n\t\tgeneral_preset,\r\n\t\t//\r\n\t\tadvance_responsiveCondition,\r\n\t\tadvance_zIndex,\r\n\t\tadvance_motionEffect,\r\n\t} = attrs;\r\n\r\n\tconst { media_desktop, media_tablet } = DEMO_WCB_GLOBAL_VARIABLES;\r\n\r\n\tconst WRAP_CLASSNAME = `.${uniqueId}[data-uniqueid=${uniqueId}]`;\r\n\tconst CONTENT_CLASSNAME = `${WRAP_CLASSNAME} .wcb-icon__content`;\r\n\r\n\t// ------------------- WRAP DIV\r\n\tconst getDivWrapStyles = (): CSSObject => {\r\n\t\tconst { alignment } = general_icon;\r\n\t\tconsole.log(alignment);\r\n\t\tconst { value_Desktop, value_Mobile, value_Tablet } =\r\n\t\t\tgetValueFromAttrsResponsives<React.CSSProperties[\"textAlign\"]>(\r\n\t\t\t\talignment\r\n\t\t\t);\r\n\t\t//\r\n\t\tconst {\r\n\t\t\tmobile_v: value_Mobile_new,\r\n\t\t\ttablet_v: value_Tablet_new,\r\n\t\t\tdesktop_v: value_Desktop_new,\r\n\t\t} = checkResponsiveValueForOptimizeCSS({\r\n\t\t\tmobile_v: value_Mobile,\r\n\t\t\ttablet_v: value_Tablet,\r\n\t\t\tdesktop_v: value_Desktop,\r\n\t\t});\r\n\t\treturn {\r\n\t\t\t[`${WRAP_CLASSNAME}`]:\r\n\t\t\t\tvalue_Mobile_new || value_Tablet_new || value_Desktop_new\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\ttextAlign: value_Mobile_new,\r\n\r\n\t\t\t\t\t\t\t[`@media (min-width: ${media_tablet})`]: value_Tablet_new\r\n\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: value_Tablet_new,\r\n\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t: undefined,\r\n\t\t\t\t\t\t\t[`@media (min-width: ${media_desktop})`]: value_Desktop_new\r\n\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: value_Desktop_new,\r\n\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t: undefined,\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t: undefined,\r\n\t\t};\r\n\t};\r\n\r\n\tif (!uniqueId) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{<Global styles={getDivWrapStyles()} />}\r\n\r\n\t\t\t{/* BACKGROUND  */}\r\n\t\t\t<Global\r\n\t\t\t\tstyles={getBackgroundColorGradientStyles({\r\n\t\t\t\t\tclassName: CONTENT_CLASSNAME,\r\n\t\t\t\t\tbackground: style_background.normal,\r\n\t\t\t\t\tbackgroundHover: style_background.hover,\r\n\t\t\t\t})}\r\n\t\t\t/>\r\n\r\n\t\t\t{/* BORDER  */}\r\n\t\t\t<Global\r\n\t\t\t\tstyles={getBorderStyles({\r\n\t\t\t\t\tclassName: CONTENT_CLASSNAME,\r\n\t\t\t\t\tborder: style_border,\r\n\t\t\t\t\tisWithRadius: true,\r\n\t\t\t\t})}\r\n\t\t\t/>\r\n\t\t\t{/* BOXSHADOW  */}\r\n\t\t\t<Global\r\n\t\t\t\tstyles={getBoxShadowStyles({\r\n\t\t\t\t\tclassName: CONTENT_CLASSNAME,\r\n\t\t\t\t\tboxShadow: style_boxshadow,\r\n\t\t\t\t})}\r\n\t\t\t/>\t\t\r\n\r\n\t\t\t{/* ICON CSS */}\r\n\t\t\t<Global\r\n\t\t\t\tstyles={[\r\n\t\t\t\t\tgetPaddingMarginStyles({\r\n\t\t\t\t\t\tclassName: WRAP_CLASSNAME,\r\n\t\t\t\t\t\tmargin: style_dimension.margin,\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tgetPaddingMarginStyles({\r\n\t\t\t\t\t\tclassName: `${WRAP_CLASSNAME} .wcb-icon__content`,\r\n\t\t\t\t\t\tpadding: style_dimension.padding,\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tgetBorderStyles({\r\n\t\t\t\t\t\tborder: style_icon,\r\n\t\t\t\t\t\tclassName: `${WRAP_CLASSNAME} .wcb-icon__content`,\r\n\t\t\t\t\t\tisWithRadius: true,\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tgetStyleObjectFromResponsiveAttr({\r\n\t\t\t\t\t\tclassName: `${WRAP_CLASSNAME} .wcb-icon-full`,\r\n\t\t\t\t\t\tvalue: general_icon.size,\r\n\t\t\t\t\t\tprefix: \"width\",\r\n\t\t\t\t\t\tprefix_2: \"fontSize\",\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t[`${CONTENT_CLASSNAME} .wcb-icon-full`]: {\r\n\t\t\t\t\t\t\tcolor: style_icon.color\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t[`${CONTENT_CLASSNAME}:hover .wcb-icon-full`]: {\r\n\t\t\t\t\t\t\tcolor: style_icon.hoverColor,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\t{/* ADVANCE  */}\r\n\t\t\t<Global\r\n\t\t\t\tstyles={getAdvanveDivWrapStyles({\r\n\t\t\t\t\tadvance_motionEffect,\r\n\t\t\t\t\tadvance_responsiveCondition,\r\n\t\t\t\t\tadvance_zIndex,\r\n\t\t\t\t\tclassName: CONTENT_CLASSNAME,\r\n\t\t\t\t\tdefaultDisplay: \"inline-block\",\r\n\t\t\t\t})}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(GlobalCss);\r\n","import { TwShadowPreset } from \"./types\";\r\n\r\nexport const getShadowStyleValueFromTwPreset = (\r\n\tpresetClass: TwShadowPreset,\r\n\tcolor: string = \"\"\r\n) => {\r\n\tswitch (presetClass) {\r\n\t\tcase \"shadow-sm\":\r\n\t\t\treturn `0 1px 2px 0 ${color || \"rgb(0 0 0 / 0.05)\"}`;\r\n\t\tcase \"shadow\":\r\n\t\t\treturn `0 1px 3px 0 ${color || \"rgb(0 0 0 / 0.1)\"}, 0 1px 2px -1px ${\r\n\t\t\t\tcolor || \"rgb(0 0 0 / 0.1)\"\r\n\t\t\t}`;\r\n\t\tcase \"shadow-md\":\r\n\t\t\treturn `0 4px 6px -1px ${color || \"rgb(0 0 0 / 0.1)\"}, 0 2px 4px -2px ${\r\n\t\t\t\tcolor || \"rgb(0 0 0 / 0.1)\"\r\n\t\t\t}`;\r\n\t\tcase \"shadow-lg\":\r\n\t\t\treturn `0 10px 15px -3px ${color || \"rgb(0 0 0 / 0.1)\"}, 0 4px 6px -4px ${\r\n\t\t\t\tcolor || \"rgb(0 0 0 / 0.1)\"\r\n\t\t\t}`;\r\n\t\tcase \"shadow-xl\":\r\n\t\t\treturn `0 20px 25px -5px ${\r\n\t\t\t\tcolor || \"rgb(0 0 0 / 0.1)\"\r\n\t\t\t}, 0 8px 10px -6px ${color || \"rgb(0 0 0 / 0.1)\"}`;\r\n\t\tcase \"shadow-2xl\":\r\n\t\t\treturn `0 25px 50px -12px ${color || \"rgb(0 0 0 / 0.25)\"}`;\r\n\t\tcase \"shadow-inner\":\r\n\t\t\treturn `inset 0 2px 4px 0 ${color || \"rgb(0 0 0 / 0.05)\"}`;\r\n\r\n\t\tdefault:\r\n\t\t\treturn \"\";\r\n\t}\r\n};\r\n","import { css, CSSObject } from \"@emotion/react\";\r\nimport { BackgroundNoImageControlData } from \"../components/controls/MyBackgroundControl/MyBackgroundNoImageControl\";\r\n\r\ninterface Params {\r\n\tbackground: BackgroundNoImageControlData;\r\n\tbackgroundHover?: BackgroundNoImageControlData;\r\n\tclassName: string;\r\n}\r\n\r\nconst getBackgroundColorGradientStyles = ({\r\n\tclassName,\r\n\tbackground,\r\n\tbackgroundHover,\r\n}: Params): CSSObject => {\r\n\tconst { bgType, color, gradient } = background;\r\n\tconst {\r\n\t\tbgType: bgType_h,\r\n\t\tcolor: color_h,\r\n\t\tgradient: gradient_h,\r\n\t} = backgroundHover || {};\r\n\r\n\tif (bgType !== \"color\" && bgType !== \"gradient\") {\r\n\t\treturn {};\r\n\t}\r\n\r\n\tlet preBgName = \"\";\r\n\tlet bgValue = \"\";\r\n\tif (bgType === \"color\") {\r\n\t\tpreBgName = \"backgroundColor\";\r\n\t\tbgValue = color;\r\n\t}\r\n\t// Backgroud gradient\r\n\tif (bgType === \"gradient\") {\r\n\t\tpreBgName = \"backgroundImage\";\r\n\t\tbgValue = gradient;\r\n\t}\r\n\t//\r\n\t//\r\n\tlet preBgName_h = \"\";\r\n\tlet bgValue_h = \"\";\r\n\tif (bgType_h === \"color\") {\r\n\t\tpreBgName_h = \"backgroundColor\";\r\n\t\tbgValue_h = color_h || \"\";\r\n\t}\r\n\t// Backgroud gradient\r\n\tif (bgType_h === \"gradient\") {\r\n\t\tpreBgName_h = \"backgroundImage\";\r\n\t\tbgValue_h = gradient_h || \"\";\r\n\t}\r\n\t//\r\n\t//\r\n\treturn {\r\n\t\t[`${className}`]: {\r\n\t\t\t[`${preBgName}`]: `${bgValue}`,\r\n\t\t\t\":hover\": {\r\n\t\t\t\t[`${preBgName_h}`]: `${bgValue_h || null}`,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default getBackgroundColorGradientStyles;\r\n","import { CSSObject } from \"@emotion/react\";\r\nimport { getShadowStyleValueFromTwPreset } from \"../components/controls/MyBoxShadowControl/getBoxShadowStyles\";\r\nimport { MyBoxShadowControlData } from \"../components/controls/MyBoxShadowControl/MyBoxShadowControl\";\r\n\r\ninterface Params {\r\n\tboxShadow: Partial<MyBoxShadowControlData>;\r\n\tclassName: string;\r\n}\r\n\r\nconst getBoxShadowStyles = ({ boxShadow, className }: Params): CSSObject => {\r\n\tconst { Hover, Normal } = boxShadow;\r\n\r\n\tconst { presetClass, blur, color, horizontal, position, spread, vertical } =\r\n\t\tNormal || {};\r\n\r\n\tconst {\r\n\t\tpresetClass: presetClass_h,\r\n\t\tblur: blur_h,\r\n\t\tcolor: color_h,\r\n\t\thorizontal: horizontal_h,\r\n\t\tposition: position_h,\r\n\t\tspread: spread_h,\r\n\t\tvertical: vertical_h,\r\n\t} = Hover || {};\r\n\t//\r\n\tlet VALUE = \"\";\r\n\tlet VALUE_H = \"\";\r\n\t//\r\n\tif (presetClass) {\r\n\t\tVALUE = getShadowStyleValueFromTwPreset(presetClass, color);\r\n\t} else {\r\n\t\tVALUE = `${horizontal}px ${vertical}px ${blur}px ${spread}px ${color} ${\r\n\t\t\tposition === \"inset\" ? position : \"\"\r\n\t\t}`;\r\n\t}\r\n\t//\r\n\tif (presetClass_h) {\r\n\t\tVALUE_H = getShadowStyleValueFromTwPreset(presetClass_h, color_h);\r\n\t} else {\r\n\t\tVALUE_H = `${horizontal_h}px ${vertical_h}px ${blur_h}px ${spread_h}px ${color_h} ${\r\n\t\t\tposition_h === \"inset\" ? position_h : \"\"\r\n\t\t}`;\r\n\t}\r\n\r\n\treturn {\r\n\t\t[`${className}`]: {\r\n\t\t\tboxShadow: VALUE,\r\n\t\t\t\"&:hover\": {\r\n\t\t\t\tboxShadow: VALUE_H,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default getBoxShadowStyles;\r\n"],"names":["Global","React","getBorderStyles","getBoxShadowStyles","getBackgroundColorGradientStyles","getAdvanveDivWrapStyles","getStyleObjectFromResponsiveAttr","getPaddingMarginStyles","getValueFromAttrsResponsives","DEMO_WCB_GLOBAL_VARIABLES","checkResponsiveValueForOptimizeCSS","GlobalCss","attrs","uniqueId","general_icon","style_background","style_icon","style_border","style_boxshadow","style_dimension","general_preset","advance_responsiveCondition","advance_zIndex","advance_motionEffect","media_desktop","media_tablet","WRAP_CLASSNAME","CONTENT_CLASSNAME","getDivWrapStyles","alignment","console","log","value_Desktop","value_Mobile","value_Tablet","mobile_v","value_Mobile_new","tablet_v","value_Tablet_new","desktop_v","value_Desktop_new","textAlign","undefined","createElement","Fragment","styles","className","background","normal","backgroundHover","hover","border","isWithRadius","boxShadow","margin","padding","value","size","prefix","prefix_2","color","hoverColor","defaultDisplay","memo","getShadowStyleValueFromTwPreset","presetClass","bgType","gradient","bgType_h","color_h","gradient_h","preBgName","bgValue","preBgName_h","bgValue_h","Hover","Normal","blur","horizontal","position","spread","vertical","presetClass_h","blur_h","horizontal_h","position_h","spread_h","vertical_h","VALUE","VALUE_H"],"sourceRoot":""}