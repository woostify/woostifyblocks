{"version":3,"file":"block-image/index.css","mappings":";;;AAIC;EAEC;EACA;EAGA;EAGA;AARF;AAUE;EACC;AARH;AAWE;EACC;AATH;AAYE;EACC;AAVH;AAiBC;;;EAGC;AAfF;;AAmBA;EACC;AAhBD;;AAmBA;EACC;AAhBD;;AAmBA;EACC;AAhBD;AAkBC;EAEC;AAjBF;AAoBC;EACC;AAlBF;AAsBC;EACC;EACA;EACA;EACA;AApBF;;AAyBA;EAIC;AAzBD;AA0BC;EACC;EACA;EACA;AAxBF;;AA4BA;EAGC;EACA;EACA;EACA;AA3BD;;AAgCC;;EACC;EACA;AA5BF;;AAmCC;;;EACC;AA9BF;AAgCE;;;EACC;EACA;AA5BH;;AAiCA;EACC;EACA;EACA;EACA;AA9BD;;AAiCA;EACC;EACA;EACA;EACA;AA9BD;;AAiCA;EACC;EACA;EACA;AA9BD;;AAiCA;EACC;EACA;EACA;EACA;AA9BD;AAoCC;EACC;AAlCF;;AAsCA;EACC;EACA;EACA;EACA;EACA;AAnCD;AAqCC;EACC;AAnCF;;AAwCC;EACC;EACA;AArCF;;AAyCA;EACC;EACA;AAtCD;AAwCC;EACC;EACA;AAtCF;;AA0CA;AAEC;EACC;EACA;EACA;AAxCF,C;;;;AC1IC;EACC;AAAF,C","sources":["webpack://woostifyblocks/./src/block-image/editor.scss","webpack://woostifyblocks/./src/components/controls/MySpacingSizesControl/styles.scss"],"sourcesContent":["// Provide special styling for the placeholder.\n// @todo: this particular minimal style of placeholder could be componentized further.\n.wp-block-image.wp-block-image {\n\t// Show Placeholder style on-select.\n\t&.is-selected .components-placeholder {\n\t\t// Block UI appearance.\n\t\tbackground-color: #fff;\n\t\tborder: none;\n\n\t\t// Disable any duotone filter applied in the selected state.\n\t\tfilter: none;\n\n\t\t// @todo: this should eventually be overridden by a custom border-radius set in the inspector.\n\t\tborder-radius: 2px;\n\n\t\t> svg {\n\t\t\topacity: 0;\n\t\t}\n\n\t\t.components-placeholder__illustration {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t&::before {\n\t\t\topacity: 0;\n\t\t}\n\t}\n\n\t// Remove the transition while we still have a legacy placeholder style.\n\t// Otherwise the content jumps between the 1px placeholder border, and any inherited custom\n\t// parent border that may get applied when you deselect.\n\t.components-placeholder__label,\n\t.components-placeholder__instructions,\n\t.components-button {\n\t\ttransition: none;\n\t}\n}\n\n.components-placeholder__fieldset {\n\tposition: relative;\n}\n\nfigure.wp-block-image:not(.wp-block) {\n\tmargin: 0;\n}\n\n.wp-block-image {\n\tposition: relative;\n\n\t.is-applying img,\n\t&.is-transient img {\n\t\topacity: 0.3;\n\t}\n\n\tfigcaption img {\n\t\tdisplay: inline;\n\t}\n\n\t// Shown while image is being uploaded.\n\t.components-spinner {\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t}\n}\n\n// This is necessary for the editor resize handles to accurately work on a non-floated, non-resized, small image.\n.wp-block-image .components-resizable-box__container {\n\t// Using \"display: table\" because:\n\t// - it visually hides empty white space in between elements\n\t// - it allows the element to be as wide as its contents (instead of 100% width, as it would be with `display: block`)\n\tdisplay: table;\n\timg {\n\t\tdisplay: block;\n\t\twidth: inherit;\n\t\theight: inherit;\n\t}\n}\n\n.block-editor-block-list__block[data-type=\"core/image\"]\n\t.block-editor-block-toolbar\n\t.block-editor-url-input__button-modal {\n\tposition: absolute;\n\tleft: 0;\n\tright: 0;\n\tmargin: 0;\n}\n\n[data-align=\"wide\"] > .wp-block-wcb-image,\n[data-align=\"full\"] > .wp-block-wcb-image {\n\timg {\n\t\theight: auto;\n\t\twidth: 100%;\n\t}\n}\n\n.wp-block[data-align=\"left\"],\n.wp-block[data-align=\"center\"],\n.wp-block[data-align=\"right\"] {\n\t> .wp-block-wcb-image {\n\t\tdisplay: table;\n\n\t\t> figcaption {\n\t\t\tdisplay: table-caption;\n\t\t\tcaption-side: bottom;\n\t\t}\n\t}\n}\n\n.wp-block[data-align=\"left\"] > .wp-block-wcb-image {\n\tmargin-right: 1em;\n\tmargin-left: 0;\n\tmargin-top: 0.5em;\n\tmargin-bottom: 0.5em;\n}\n\n.wp-block[data-align=\"right\"] > .wp-block-wcb-image {\n\tmargin-left: 1em;\n\tmargin-right: 0;\n\tmargin-top: 0.5em;\n\tmargin-bottom: 0.5em;\n}\n\n.wp-block[data-align=\"center\"] > .wp-block-wcb-image {\n\tmargin-left: auto;\n\tmargin-right: auto;\n\ttext-align: center;\n}\n\n.wp-block-wcb-image__crop-area {\n\tposition: relative;\n\tmax-width: 100%;\n\twidth: 100%;\n\toverflow: hidden;\n\n\t// This removes the border from the img within the image cropper so it\n\t// can be applied to the cropper itself. This then allows the image to be\n\t// cropped within the visual border providing more accurate editing and\n\t// smoother UX.\n\t.reactEasyCrop_Container .reactEasyCrop_Image {\n\t\tborder: none;\n\t}\n}\n\n.wp-block-wcb-image__crop-icon {\n\tpadding: 0 8px;\n\tmin-width: 48px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\tsvg {\n\t\tfill: currentColor;\n\t}\n}\n\n.wp-block-wcb-image__zoom {\n\t.components-popover__content {\n\t\tmin-width: 260px;\n\t\toverflow: visible !important;\n\t}\n}\n\n.wp-block-wcb-image__aspect-ratio {\n\tdisplay: flex;\n\talign-items: center;\n\n\t.components-button {\n\t\tpadding-left: 0;\n\t\tpadding-right: 0;\n\t}\n}\n\n/* ------------------------------------------- */\n.wcb-image__wrap {\n\timg {\n\t\tdisplay: block;\n\t\twidth: inherit;\n\t\theight: inherit;\n\t}\n}\n",".MySpacingSizesControl {\n\t.components-base-control__field {\n\t\tmargin-bottom: 0;\n\t}\n}\n"],"names":[],"sourceRoot":""}